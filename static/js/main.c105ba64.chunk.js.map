{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","color","onClick","value","Board","i","_this","this","squares","colors","rowCount","columnCount","newBoard","colSquares","push","renderSquare","oneRow","React","Component","Game","_this2","Object","_mnt_data_personal_practice_react_reactPracticeApp_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_mnt_data_personal_practice_react_reactPracticeApp_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_mnt_data_personal_practice_react_reactPracticeApp_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","XIsNext","slice","length","calculateWinner","setState","concat","step","status","_this3","current","winData","moves","map","move","desc","key","jumpTo","coloredArray","winner","console","log","winningSquares","forEach","wonIndex","handleClick","lines","_lines$i","_mnt_data_personal_practice_react_reactPracticeApp_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c105ba64.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n  return (\n    <button className={props.color} onClick={props.onClick} >\n      {props.value}\n    </button >\n  );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        color={this.props.colors[i]}\n        onClick={() => this.props.onClick(i)}\n      />);\n  }\n\n  render() {\n    let rowCount = 3, columnCount = 3;\n    let newBoard = []\n    while (rowCount--) {\n      columnCount = 3\n      let colSquares = []\n      while (columnCount--) {\n        colSquares.push(this.renderSquare((rowCount * 3) + columnCount));\n      }\n      let oneRow = <div className=\"board-row\">{colSquares}</div>\n      newBoard.push(oneRow)\n    }\n\n    return (\n      <div>{newBoard}</div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      XIsNext: true,\n    }\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.XIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      XIsNext: !this.state.XIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      XIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winData = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go To move #' + move :\n        'Go to Starting Of Game';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    })\n    let status;\n    let coloredArray = Array(9).fill(\"square\");\n    if (winData != null && winData.winner) {\n      status = 'Winner: ' + winData.winner;\n      console.log(winData.winningSquares);\n      winData.winningSquares.forEach((wonIndex) => { coloredArray[wonIndex] = \"greenBox\" });\n      //this.setState({ colors: coloredArray });\n    } else {\n      status = 'Next player: ' + (this.state.XIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            colors={coloredArray}\n            onClick={(i) => this.handleClick(i)} />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], winningSquares: [a, b, c] };\n    }\n  }\n  return null;\n}"],"sourceRoot":""}